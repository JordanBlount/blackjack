*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    font-family: 'Playfair Display', serif;
}

body {
    color: #FFF;
    background-color: rgb(236, 234, 234);
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
}

.table {
    display: flex;
    justify-content: center;
    align-items: center;
    order: 1;
    width: 800px;
    height: 500px;

    /* Makes it where the table can not get smaller than this */
    min-width: 800px;
    min-height: 500px;
    
    /* 
        TODO: A gradiant with a hard stop in the middle at a 
        45 degree angle to it really look like a table at the corners
    */

    background-color: rgb(104, 72, 12);
    border-radius: 5px;
    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.466);
}

.border {
    width: 95%;
    height: 93%;
    background-color: rgb(0, 105, 0);
    border-radius: 5px;
}

.surface {
    width: 100%;
    height: 100%;
    border-radius: 5px;
    box-shadow: inset 0px 0px 2px black;

    /* Adds over image to the background */
    background-image: url('./assests/imgs/logo.svg');
    background-repeat: no-repeat;
    background-position: center;

    /* 
        TODO: Styling to give the table some texture
    */
    
    display: flex;
    flex-direction: column;

    /* 
        Makes it so you can not select and highlight text
    */
    user-select: none;
}

.surfaces {
    width: 100%;
    height: 100%;

    /* Gives each of the surfaces some padding */
    padding: 0.75em 0.75em;

    /* Testing to see if the borders are split */
    border: 1px solid rgba(41, 41, 41, 0.329);
}

.dealer-area {
    display: flex;
    justify-content: center;
    align-items: center;
}

.middle {
    display: flex;
    justify-content: space-around;
    align-items: center;
    flex-direction: column;
}

.player-area {
    display: flex;
    align-items: center;
    justify-content: space-between;
    /* outline: 2px solid coral; */
}

.btns {
    /* 
        FIXME: Moves the buttons container in the bottom order
        this is only for debugging purposes.
    */
    order: 2;
    margin-top: 1.5rem;
}

.game-btn {
    /* 
        TODO: Make the buttons uniform in size
    */
    border: 4px solid #002D00;
    background-color: rgb(0, 105, 0);
    box-shadow: inset 0px 0px 2px black;
    border-radius: 3px;
    padding: 0.75em 1.5em;
    color: rgb(255, 255, 255);
    
    font-size: 1.125rem;
    font-weight: bold;
    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
}

.game-btn:hover,
.game-btn:active {
    color: rgb(255, 231, 169);
    background-color: rgb(0, 155, 0);
}

.game-btn:active {
    background-color: rgb(23, 170, 23);
}

.money-container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-direction: column;
}

/* 

TODO: Create SVGs for each card type

*/
.card {
    position: relative;
    width: 70px;
    height: 96px;
    background-color: white;
    box-shadow: 0px 3px 2px rgba(0, 0, 0, 0.250);
    border-radius: 5px;

    /*  Puts space on right of each card
        TODO: Change this to be added somewhere else
    */
    margin-right: 0.5em;
}

.card.red {
    color: #C83000;
}

.card.black {
    color: #000000;
}

.card::before, 
.card::after {
    position: absolute;
    content: attr(data-value);
    font-weight: 700;
    font-size: 1.25rem;
}

.card::before {
    top: 0.1125em;
    left: 0.3em;
}

.card::after {
    bottom: 0.1125em;
    right: 0.3em;
    transform: rotate(180deg);
}

.diamonds {
    background-image: url(./assests/imgs/suits/diamond.svg);
    background-repeat: no-repeat;
    background-position: center;
}

.clubs {
    background-image: url(./assests/imgs/suits/club.svg);
    background-repeat: no-repeat;
    background-position: center;
}

.hearts {
    background-image: url(./assests/imgs/suits/heart.svg);
    background-repeat: no-repeat;
    background-position: center;
}

.spades {
    background-image: url(./assests/imgs/suits/spade.svg);
    background-repeat: no-repeat;
    background-position: center;
}

.card-container {
    display: flex;
}

.money-row {
    display: flex;
    justify-content: space-between;
    /* outline: 2px solid red; */
    padding-bottom: 3.5em;
}

/* Container for my stacks */
.chip-stack {
    position: relative;
    padding-right: 3.5em;
    /* outline: 2px solid red; */
}

/* Use SVGs. They look much better and are crisper */
.chip {
    position: absolute;
    width: 55px;
    height: 55px;
}

.chip_10 {
    background-image: url('./assests/imgs/10.svg');
    background-repeat: no-repeat;
    background-position: center;
}

.chip_20 {
    background-image: url('./assests/imgs/20.svg');
    background-repeat: no-repeat;
    background-position: center;
}

.chip_50 {
    background-image: url('./assests/imgs/50.svg');
    background-repeat: no-repeat;
    background-position: center;
}

.chip_100 {
    background-image: url('./assests/imgs/100.svg');
    background-repeat: no-repeat;
    background-position: center;
}

/* Positions to make stacks */

.chip_1 {
    top: 0px;
}
.chip_2 {
    top: -3px;
}
.chip_3 {
    top: -6px;
}

.chip_4 {
    top: -9px;
}

.chip_5 {
    top: -12px;
}

.chip_6 {
    top: -15px;
}

.chip_7 {
    top: -18px;
}

.chip_8 {
    top: -21px;
}

/* 

This is going to be how I do everything for desktop.
The game needs to be mobile first

*/
@media(max-width: 600px) {

}